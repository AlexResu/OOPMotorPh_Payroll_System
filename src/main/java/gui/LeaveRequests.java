/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import models.AccountAccess;
import models.Employee;
import models.HRPersonnel;
import models.LeaveRequest;
import dao.HRPersonnelDao;
import dao.UserDao;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JScrollBar;
import javax.swing.SwingWorker;

/**
 *
 * @author Alex Resurreccion
 */
public class LeaveRequests extends javax.swing.JPanel {
    private AccountAccess account;
    private HRPersonnel user;
    private List<LeaveRequest> leaves;
    /**
     * Creates new form LeaveRequests
     */
    public LeaveRequests() {
        initComponents();
    }
    
    public LeaveRequests(AccountAccess account, HRPersonnel user) {
        this.account = account;
        this.user = user;
        initComponents();
        loadLeavesList();
        initListeners();
        jLabel3.setVisible(false);
    }
    
    private void initListeners(){
        leaveRequeststable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return; // Ignore intermediate states
                }

                int selectedRow = leaveRequeststable.getSelectedRow();
                if (selectedRow == -1 || selectedRow >= leaves.size()) {
                    approve.setEnabled(false);
                    decline.setEnabled(false);
                    return;
                }

                LeaveRequest selectedUser = leaves.get(selectedRow);
                if (selectedUser != null && "PENDING".equals(selectedUser.getLeaveStatus())) {
                    approve.setEnabled(true);
                    decline.setEnabled(true);
                } else {
                    approve.setEnabled(false);
                    decline.setEnabled(false);
                }
            }
        });
    }
    
    protected void loadLeavesList(){
        DefaultTableModel model = (DefaultTableModel) leaveRequeststable.getModel();
        model.setRowCount(0);
        HRPersonnelDao hrPersonnelDao = new HRPersonnelDao();
        if((String) leaveRemarks.getSelectedItem() == null){
            leaves = hrPersonnelDao.loadLeaveRequest();
        } else {
            leaves = hrPersonnelDao.loadLeaveRequest((String) leaveRemarks.getSelectedItem());
        }
        for (LeaveRequest leave : leaves) {
            Employee employee = leave.getEmployee();
            Object data[] = {
                leave.getLeaveID(),
                employee.getEmployeeID(),
                employee.getDepartment(),
                employee.getFirstName() + " " + employee.getLastName(),
                leave.getDateCreated(),
                leave.getLeaveType(),
                leave.getDuration(),
                leave.getStartDate(),
                leave.getEndDate(),
                leave.getReason(),
                leave.getLeaveStatus()
            };

            // Add the row to the table model
            model.addRow(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileterMonth = new javax.swing.JLabel();
        approve = new javax.swing.JButton();
        decline = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        leaveRequeststable = new javax.swing.JTable();
        leaveRequests = new javax.swing.JLabel();
        leaveRemarks = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(860, 590));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fileterMonth.setBackground(new java.awt.Color(255, 255, 255));
        fileterMonth.setForeground(new java.awt.Color(0, 0, 0));
        fileterMonth.setText("Filter by Remarks");
        fileterMonth.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        add(fileterMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 120, 30));

        approve.setBackground(new java.awt.Color(255, 255, 255));
        approve.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        approve.setForeground(new java.awt.Color(0, 102, 0));
        approve.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Resurreccion\\Documents\\NetBeansProjects\\OOPMotorPhPayrollSystem\\resources\\check.png")); // NOI18N
        approve.setText("Approve");
        approve.setBorder(null);
        approve.setFocusPainted(false);
        approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveActionPerformed(evt);
            }
        });
        add(approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 140, 50));

        decline.setBackground(new java.awt.Color(255, 255, 255));
        decline.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        decline.setForeground(new java.awt.Color(153, 0, 0));
        decline.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Resurreccion\\Documents\\NetBeansProjects\\OOPMotorPhPayrollSystem\\resources\\remove.png")); // NOI18N
        decline.setText("Decline");
        decline.setBorder(null);
        decline.setFocusPainted(false);
        decline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineActionPerformed(evt);
            }
        });
        add(decline, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 140, 50));

        jScrollPane9.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jScrollPane9MouseWheelMoved(evt);
            }
        });

        leaveRequeststable.setAutoCreateRowSorter(true);
        leaveRequeststable.setBackground(new java.awt.Color(255, 255, 255));
        leaveRequeststable.setForeground(new java.awt.Color(0, 0, 0));
        leaveRequeststable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "10001", "Executive", "Manuel III A.", "05/18/2023", "08:00", null, "15:00", "", null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/19/2023", "08:00", null, "15:00", null, null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/20/2023", "08:00", null, "15:00", null, null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/21/2023", "08:00", null, "15:00", null, null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/22/2023", "00:00", null, "00:00", "SL", null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/23/2023", "00:00", null, "00:00", "VL", null, null},
                {null, "10001", "Executive", "Manuel III A.", "05/24/2023", "00:00", null, "00:00", "VL", null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Employee no.", "Department", "Last Name", "Date Filed", "Leave Type", "Days Applied", "Date From", "Date Until", "Reason", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        leaveRequeststable.setGridColor(new java.awt.Color(102, 102, 102));
        leaveRequeststable.setSelectionBackground(new java.awt.Color(0, 0, 153));
        leaveRequeststable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        leaveRequeststable.setShowGrid(true);
        jScrollPane9.setViewportView(leaveRequeststable);

        add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 860, 450));

        leaveRequests.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        leaveRequests.setForeground(new java.awt.Color(0, 0, 204));
        leaveRequests.setText("Leave Requests");
        add(leaveRequests, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 170, -1));

        leaveRemarks.setBackground(new java.awt.Color(255, 255, 255));
        leaveRemarks.setForeground(new java.awt.Color(0, 0, 0));
        leaveRemarks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Pending", "Declined", "Approved" }));
        leaveRemarks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        leaveRemarks.setLightWeightPopupEnabled(false);
        leaveRemarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveRemarksActionPerformed(evt);
            }
        });
        add(leaveRemarks, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 210, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Sending email notification. Please wait...");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, 250, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveActionPerformed
        jLabel3.setVisible(true);
        boolean result;
        SwingWorker<Boolean, Void> worker = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                HRPersonnelDao hrPersonnelDao = new HRPersonnelDao();
                int selectedRow = leaveRequeststable.getSelectedRow();
                LeaveRequest selectedLeave = null;
                if (selectedRow != -1) { // Ensure a row is selected
                    selectedLeave = leaves.get(selectedRow); 
                }
                return hrPersonnelDao.approveLeaveRequest(selectedLeave, user);
            }

            @Override
            protected void done() {
                try {
                    boolean result = get();
                    if (result) {
                        loadLeavesList();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                jLabel3.setVisible(false);
            }
        };

        worker.execute();
    }//GEN-LAST:event_approveActionPerformed

    private void declineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineActionPerformed
        jLabel3.setVisible(true);
        SwingWorker<Boolean, Void> worker = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                HRPersonnelDao hrPersonnelDao = new HRPersonnelDao();
                int selectedRow = leaveRequeststable.getSelectedRow();
                LeaveRequest selectedLeave = null;
                if (selectedRow != -1) { // Ensure a row is selected
                    selectedLeave = leaves.get(selectedRow); 
                }
                return hrPersonnelDao.declineLeaveRequest(selectedLeave, user);
            }

            @Override
            protected void done() {
                try {
                    boolean result = get();
                    if (result) {
                        loadLeavesList();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                jLabel3.setVisible(false);
            }
        };

        worker.execute();
    }//GEN-LAST:event_declineActionPerformed

    private void leaveRemarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveRemarksActionPerformed
        loadLeavesList();
    }//GEN-LAST:event_leaveRemarksActionPerformed

    private void jScrollPane9MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jScrollPane9MouseWheelMoved
       int rotation = evt.getWheelRotation();
                JScrollBar verticalScrollBar = jScrollPane9.getVerticalScrollBar();
                
                // Control the scroll speed here (higher value = faster scroll)
                int scrollAmount = rotation * 38;  // Adjust this multiplier for smoothness
                
                verticalScrollBar.setValue(verticalScrollBar.getValue() + scrollAmount);
    }//GEN-LAST:event_jScrollPane9MouseWheelMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approve;
    private javax.swing.JButton decline;
    private javax.swing.JLabel fileterMonth;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> leaveRemarks;
    private javax.swing.JLabel leaveRequests;
    private javax.swing.JTable leaveRequeststable;
    // End of variables declaration//GEN-END:variables
}
