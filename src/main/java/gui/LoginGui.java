/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import models.AccountAccess;
import gui.UserHomePage;
import dao.AccountAccessDao;
import alex.oopmotorphpayrollsystem.User;
import dao.UserDao;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author Alex Resurreccion
 */
public class LoginGui extends javax.swing.JFrame {
    private final UserDao userDao;
    private final AccountAccessDao accountAccessDao;
    /**
     * Creates new form LoginGui
     */
    public LoginGui() {
        initComponents();
        userDao = new UserDao(); // Initialize the DAO
        accountAccessDao = new AccountAccessDao();
        setLocationRelativeTo(null); 
        invalidInputsLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPage = new keeptoo.KGradientPanel();
        motorPhLogo = new javax.swing.JLabel();
        logInFieldPanel = new javax.swing.JPanel();
        userIDValue = new javax.swing.JTextField();
        userID = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        login = new javax.swing.JLabel();
        passwordValue = new javax.swing.JPasswordField();
        jPanel5 = new javax.swing.JPanel();
        invalidInputsLabel = new javax.swing.JLabel();
        loginkButton = new com.k33ptoo.components.KButton();
        closeWindowLabel = new javax.swing.JLabel();
        motorPhLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        loginPage.setkEndColor(new java.awt.Color(0, 0, 204));
        loginPage.setkGradientFocus(300);
        loginPage.setkStartColor(new java.awt.Color(153, 0, 204));
        loginPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loginPageMousePressed(evt);
            }
        });

        motorPhLogo.setBackground(new java.awt.Color(255, 153, 255));
        motorPhLogo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Resurreccion\\Documents\\NetBeansProjects\\OOPMotorPhPayrollSystem\\resources\\OPPORTUNITIES (5).png")); // NOI18N
        motorPhLogo.setMaximumSize(new java.awt.Dimension(74, 10));

        logInFieldPanel.setBackground(new java.awt.Color(255, 255, 255));
        logInFieldPanel.setToolTipText("");
        logInFieldPanel.setName(""); // NOI18N

        userIDValue.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        userIDValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDValueActionPerformed(evt);
            }
        });

        userID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userID.setForeground(new java.awt.Color(0, 0, 0));
        userID.setText("User ID");

        password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        password.setForeground(new java.awt.Color(0, 0, 0));
        password.setText("Password");

        login.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        login.setForeground(new java.awt.Color(0, 0, 255));
        login.setText("Log in");

        passwordValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordValueActionPerformed(evt);
            }
        });

        jPanel5.setOpaque(false);

        invalidInputsLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        invalidInputsLabel.setForeground(new java.awt.Color(204, 0, 51));
        invalidInputsLabel.setText("Invalid Credentials");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(invalidInputsLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(invalidInputsLabel))
        );

        loginkButton.setText("Log in");
        loginkButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginkButton.setkBackGroundColor(new java.awt.Color(51, 51, 255));
        loginkButton.setkEndColor(new java.awt.Color(51, 51, 255));
        loginkButton.setkHoverEndColor(new java.awt.Color(0, 153, 153));
        loginkButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        loginkButton.setkHoverStartColor(new java.awt.Color(51, 51, 255));
        loginkButton.setkPressedColor(new java.awt.Color(0, 0, 255));
        loginkButton.setkSelectedColor(new java.awt.Color(255, 255, 255));
        loginkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logInFieldPanelLayout = new javax.swing.GroupLayout(logInFieldPanel);
        logInFieldPanel.setLayout(logInFieldPanelLayout);
        logInFieldPanelLayout.setHorizontalGroup(
            logInFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInFieldPanelLayout.createSequentialGroup()
                .addGroup(logInFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logInFieldPanelLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(logInFieldPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(logInFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userIDValue)
                            .addComponent(password)
                            .addComponent(userID)
                            .addComponent(passwordValue)
                            .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        logInFieldPanelLayout.setVerticalGroup(
            logInFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInFieldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userIDValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        closeWindowLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Alex Resurreccion\\Documents\\NetBeansProjects\\MotorPhApp\\resources\\icons8-close-window-48.png")); // NOI18N
        closeWindowLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        closeWindowLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWindowLabelMouseClicked(evt);
            }
        });

        motorPhLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        motorPhLabel.setForeground(new java.awt.Color(255, 255, 255));
        motorPhLabel.setText("MotorPH Payroll System");

        javax.swing.GroupLayout loginPageLayout = new javax.swing.GroupLayout(loginPage);
        loginPage.setLayout(loginPageLayout);
        loginPageLayout.setHorizontalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPageLayout.createSequentialGroup()
                .addGroup(loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPageLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeWindowLabel))
                    .addGroup(loginPageLayout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(motorPhLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 408, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(loginPageLayout.createSequentialGroup()
                .addGap(471, 471, 471)
                .addComponent(motorPhLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logInFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        loginPageLayout.setVerticalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeWindowLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPageLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(motorPhLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logInFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(motorPhLabel)
                .addGap(36, 36, 36))
        );

        getContentPane().add(loginPage);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userIDValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDValueActionPerformed
        invalidInputsLabel.setVisible(false);
    }//GEN-LAST:event_userIDValueActionPerformed

    private void passwordValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordValueActionPerformed
        loginkButton.doClick();
    }//GEN-LAST:event_passwordValueActionPerformed

    private void closeWindowLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWindowLabelMouseClicked
        this.dispose();
    }//GEN-LAST:event_closeWindowLabelMouseClicked

    private void loginkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginkButtonActionPerformed
        String employeeIdStr = userIDValue.getText();
        String password = new String(passwordValue.getPassword());

        if (employeeIdStr.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Employee ID and Password cannot be empty.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Use the new userDao to check for locked status first.
        if (userDao.isAccountLocked(employeeIdStr)) {
            JOptionPane.showMessageDialog(this, "This account is locked. Please contact an administrator.", "Account Locked", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Use the new userDao's authenticate method. It returns a User object on success, null on failure.
        User authenticatedUser = userDao.authenticate(employeeIdStr, password);

        if (authenticatedUser != null) {
            // SUCCESS!
            // Now, use your original AccountAccessDao to get the object needed by UserHomePage
            int employeeId = Integer.parseInt(employeeIdStr);
            AccountAccess account = accountAccessDao.login(employeeId, password);

            // This should not be null if authentication succeeded, but it's a good safety check.
            if (account != null) {
                 JOptionPane.showMessageDialog(this, "Login Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
                UserHomePage homePage = new UserHomePage(account); // This now uses the correct object type
                homePage.setVisible(true);
                this.dispose();
            } else {
                 // This case is unlikely but handles potential data inconsistency.
                 JOptionPane.showMessageDialog(this, "Login failed due to a system error.", "Error", JOptionPane.ERROR_MESSAGE);
            }
           
        } else {
            // FAILED LOGIN
            handleFailedLogin(employeeIdStr);
        }
    }                                            

    // Helper method to handle the logic for a failed login attempt.
    private void handleFailedLogin(String employeeId) {
        // We check the attempts only if the user actually exists.
        // The getLoginAttempts will be > 0 only if a failed attempt was just recorded.
        int attempts = userDao.getLoginAttempts(employeeId);
        if (attempts > 0) {
            int remainingAttempts = 3 - attempts;
            if (remainingAttempts <= 0) {
                JOptionPane.showMessageDialog(this, "You have exceeded the maximum login attempts. Your account is now locked.", "Account Locked", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Employee ID or password. You have " + remainingAttempts + " attempt(s) remaining.", "Login Failed", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            // If attempts are 0, it means the employee ID was not found in the database.
            JOptionPane.showMessageDialog(this, "Invalid Employee ID or password.", "Login Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_loginkButtonActionPerformed

    private void loginPageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginPageMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginPageMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closeWindowLabel;
    private javax.swing.JLabel invalidInputsLabel;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel logInFieldPanel;
    private javax.swing.JLabel login;
    private keeptoo.KGradientPanel loginPage;
    private com.k33ptoo.components.KButton loginkButton;
    private javax.swing.JLabel motorPhLabel;
    private javax.swing.JLabel motorPhLogo;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField passwordValue;
    private javax.swing.JLabel userID;
    private javax.swing.JTextField userIDValue;
    // End of variables declaration//GEN-END:variables
}
