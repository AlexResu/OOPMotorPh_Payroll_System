/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import dao.AccountAccessDao;
import dao.UserDao;
import javax.swing.JOptionPane;
import models.AccountAccess;
import models.User;

/**
 *
 * @author Alex Resurreccion
 */
public class LoginPage extends javax.swing.JFrame {
    private final UserDao userDao;
    private final AccountAccessDao accountAccessDao;

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        userDao = new UserDao(); // Initialize the DAO
        accountAccessDao = new AccountAccessDao();
        setLocationRelativeTo(null); 
        invalidInputsLabel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        motorPhLogo = new javax.swing.JLabel();
        motorPhLabel = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        loginkButton1 = new com.k33ptoo.components.KButton();
        invalidInputsLabel1 = new javax.swing.JLabel();
        passwordValue1 = new javax.swing.JPasswordField();
        password1 = new javax.swing.JLabel();
        userIDValue1 = new javax.swing.JTextField();
        userID1 = new javax.swing.JLabel();
        login1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1110, 660));
        setResizable(false);
        setSize(new java.awt.Dimension(1110, 660));
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        motorPhLogo.setBackground(new java.awt.Color(255, 153, 255));
        motorPhLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OPPORTUNITIES (5).png"))); // NOI18N
        motorPhLogo.setMaximumSize(new java.awt.Dimension(74, 10));
        jPanel1.add(motorPhLogo);
        motorPhLogo.setBounds(410, 30, 300, 172);

        motorPhLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        motorPhLabel.setForeground(new java.awt.Color(255, 255, 255));
        motorPhLabel.setText("MotorPH Payroll System");
        jPanel1.add(motorPhLabel);
        motorPhLabel.setBounds(470, 590, 166, 20);

        kGradientPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 8, true));
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 0, 204, 80));
        kGradientPanel1.setkGradientFocus(600);
        kGradientPanel1.setkStartColor(new java.awt.Color(153, 0, 204));
        kGradientPanel1.setOpaque(false);
        kGradientPanel1.setLayout(null);

        loginkButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        loginkButton1.setText("Log in");
        loginkButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginkButton1.setkBackGroundColor(new java.awt.Color(51, 51, 255));
        loginkButton1.setkEndColor(new java.awt.Color(0, 0, 255));
        loginkButton1.setkHoverEndColor(new java.awt.Color(0, 204, 204));
        loginkButton1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        loginkButton1.setkHoverStartColor(new java.awt.Color(51, 51, 255));
        loginkButton1.setkPressedColor(new java.awt.Color(0, 0, 255));
        loginkButton1.setkSelectedColor(new java.awt.Color(255, 255, 255));
        loginkButton1.setkStartColor(new java.awt.Color(0, 204, 204));
        loginkButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginkButton1ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(loginkButton1);
        loginkButton1.setBounds(40, 340, 330, 45);

        invalidInputsLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        invalidInputsLabel1.setForeground(new java.awt.Color(255, 102, 102));
        invalidInputsLabel1.setText("Invalid Credentials");
        kGradientPanel1.add(invalidInputsLabel1);
        invalidInputsLabel1.setBounds(150, 310, 112, 20);

        passwordValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordValue1ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(passwordValue1);
        passwordValue1.setBounds(40, 250, 330, 40);

        password1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        password1.setForeground(new java.awt.Color(255, 255, 255));
        password1.setText("Password");
        kGradientPanel1.add(password1);
        password1.setBounds(40, 230, 70, 20);

        userIDValue1.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        userIDValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDValue1ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(userIDValue1);
        userIDValue1.setBounds(40, 180, 330, 40);

        userID1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userID1.setForeground(new java.awt.Color(255, 255, 255));
        userID1.setText("User ID");
        kGradientPanel1.add(userID1);
        userID1.setBounds(40, 160, 46, 20);

        login1.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 40)); // NOI18N
        login1.setForeground(new java.awt.Color(204, 255, 255));
        login1.setText("Log in");
        kGradientPanel1.add(login1);
        login1.setBounds(20, 80, 140, 46);

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        kGradientPanel1.add(jSeparator1);
        jSeparator1.setBounds(20, 50, 370, 20);

        jPanel1.add(kGradientPanel1);
        kGradientPanel1.setBounds(350, 160, 410, 420);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Untitled design (4).png"))); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(1110, 660));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 1110, 660);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1110, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginkButton1ActionPerformed
        String employeeIdStr = userIDValue1.getText();
        String password = new String(passwordValue1.getPassword());

        if (employeeIdStr.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Employee ID and Password cannot be empty.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Use the new userDao to check for locked status first.
        if (userDao.isAccountLocked(employeeIdStr)) {
            JOptionPane.showMessageDialog(this, "This account is locked. Please contact an administrator.", "Account Locked", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Use the new userDao's authenticate method. It returns a User object on success, null on failure.
        User authenticatedUser = userDao.authenticate(employeeIdStr, password);

        if (authenticatedUser != null) {
            // SUCCESS!
            // Now, use your original AccountAccessDao to get the object needed by UserHomePage
            int employeeId = Integer.parseInt(employeeIdStr);
            AccountAccess account = accountAccessDao.login(employeeId, password);

            // This should not be null if authentication succeeded, but it's a good safety check.
            if (account != null) {
                JOptionPane.showMessageDialog(this, "Login Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
                UserHomePage homePage = new UserHomePage(account); // This now uses the correct object type
                homePage.setVisible(true);
                this.dispose();
            } else {
                // This case is unlikely but handles potential data inconsistency.
                JOptionPane.showMessageDialog(this, "Login failed due to a system error.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            // FAILED LOGIN
            handleFailedLogin(employeeIdStr);
        }
    }

        // Helper method to handle the logic for a failed login attempt.
        private void handleFailedLogin(String employeeId) {
            // We check the attempts only if the user actually exists.
            // The getLoginAttempts will be > 0 only if a failed attempt was just recorded.
            int attempts = userDao.getLoginAttempts(employeeId);
            if (attempts > 0) {
                int remainingAttempts = 3 - attempts;
                if (remainingAttempts <= 0) {
                    JOptionPane.showMessageDialog(this, "You have exceeded the maximum login attempts. Your account is now locked.", "Account Locked", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Employee ID or password. You have " + remainingAttempts + " attempt(s) remaining.", "Login Failed", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                // If attempts are 0, it means the employee ID was not found in the database.
                JOptionPane.showMessageDialog(this, "Invalid Employee ID or password.", "Login Failed", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_loginkButton1ActionPerformed

    private void passwordValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordValue1ActionPerformed
        loginkButton1.doClick();
    }//GEN-LAST:event_passwordValue1ActionPerformed

    private void userIDValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDValue1ActionPerformed
        invalidInputsLabel1.setVisible(false);
    }//GEN-LAST:event_userIDValue1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel invalidInputsLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel login1;
    private com.k33ptoo.components.KButton loginkButton1;
    private javax.swing.JLabel motorPhLabel;
    private javax.swing.JLabel motorPhLogo;
    private javax.swing.JLabel password1;
    private javax.swing.JPasswordField passwordValue1;
    private javax.swing.JLabel userID1;
    private javax.swing.JTextField userIDValue1;
    // End of variables declaration//GEN-END:variables
}
